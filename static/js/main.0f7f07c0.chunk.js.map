{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h2/Affair.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","Error404","Message","avatar","name","message","time","className","classes","src","alt","bubble","text","messageData","HW1","SuperButton","red","restProps","finalClassName","s","btn","default","Affair","props","affair","btnClose","onClick","deleteAffairCallback","_id","version","xmlns","width","height","viewBox","d","Affairs","affairs","affairsList","priorities","buttonsGroup","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","priority","HW2","useState","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","superInput","errorInput","superInputWrapper","e","currentTarget","value","Greeting","setNameCallback","addUser","totalUsers","bg","greetingBlock","greetingWrapper","placeholder","GreetingContainer","users","addUserCallback","setName","setError","length","alert","HW3","setUsers","user","v1","SuperCheckbox","onChangeChecked","children","checkbox","checkboxWrapper","checked","HW4","setText","showAlert","setChecked","column","PreJunior","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.0f7f07c0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__8WR15\",\"avatar\":\"Message_avatar__3FT3j\",\"bubble\":\"Message_bubble__FPVxi\",\"name\":\"Message_name__Tzmp0\",\"text\":\"Message_text__2fXBO\",\"time\":\"Message_time__HOFTG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affairs_affairs__HryGq\",\"affairsList\":\"Affairs_affairsList__3FDKW\",\"priorities\":\"Affairs_priorities__3FD-n\",\"buttonsGroup\":\"Affairs_buttonsGroup__1wHdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Greeting_bg__Vw-9T\",\"greetingBlock\":\"Greeting_greetingBlock__39dXx\",\"greetingWrapper\":\"Greeting_greetingWrapper__1p9ep\",\"totalUsers\":\"Greeting_totalUsers__2owre\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInputWrapper\":\"SuperInputText_superInputWrapper__GxQSo\",\"error\":\"SuperInputText_error__2J82S\",\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"SuperButton_btn__3MgTu\",\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxWrapper\":\"SuperCheckbox_checkboxWrapper__3fK4G\",\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affair\":\"Affair_affair__3skNw\",\"btnClose\":\"Affair_btnClose__xlcjs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\"};","import React from \"react\";\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Error404() {\n    return (\n        <div>\n            <div>404</div>\n            <div>Page not found!</div>\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from 'react';\nimport classes from './Message.module.css';\n\ntype messageDataType = {\n  avatar: string;\n  name: string;\n  message: string;\n  time: string;\n};\n\nfunction Message({ avatar, name, message, time }: messageDataType) {\n  return (\n    <div className={classes.message}>\n      <div className={classes.avatar}>\n        <img src={avatar} alt=\"Avatar\" />\n      </div>\n      <div className={classes.bubble}>\n        <span className={classes.name}>{name}</span>\n        <p className={classes.text}>{message}</p>\n        <span className={classes.time}>{time}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default Message;\n","import React from 'react';\nimport Message from './Message';\n\nconst messageData = {\n  avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n  name: 'Andrei',\n  message: 'npm start нажимал?',\n  time: '22:00',\n};\n\nfunction HW1() {\n  const { avatar, name, message, time } = messageData;\n\n  return (\n    <div>\n      <hr />\n      homeworks 1{/*should work (должно работать)*/}\n      <Message\n        avatar={avatar}\n        name={name}\n        message={message}\n        time={time}\n      />\n      <hr />\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeMessage/>*/}\n      {/*<hr />*/}\n    </div>\n  );\n}\n\nexport default HW1;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.btn} ${red ? s.red : s.default} ${className ? className : ''}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React from 'react';\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\nimport { AffairType } from './HW2';\n\nimport classes from './Affair.module.css';\n\ntype AffairPropsType = {\n  // key не нужно типизировать\n  affair: AffairType; // need to fix any\n  deleteAffairCallback: (_id: number) => void; // need to fix any\n};\n\nfunction Affair(props: AffairPropsType) {\n  const { affair, btnClose } = classes;\n\n  const deleteCallback = () => {\n    props.deleteAffairCallback(props.affair._id);\n  }; // need to fix\n\n  return (\n    <li className={affair}>\n      <span>{props.affair.name}</span>\n      <SuperButton onClick={deleteCallback} className={btnClose}>\n        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 32 32\">\n          <path d=\"M4 10v20c0 1.1 0.9 2 2 2h18c1.1 0 2-0.9 2-2v-20h-22zM10 28h-2v-14h2v14zM14 28h-2v-14h2v14zM18 28h-2v-14h2v14zM22 28h-2v-14h2v14z\"></path>\n          <path d=\"M26.5 4h-6.5v-2.5c0-0.825-0.675-1.5-1.5-1.5h-7c-0.825 0-1.5 0.675-1.5 1.5v2.5h-6.5c-0.825 0-1.5 0.675-1.5 1.5v2.5h26v-2.5c0-0.825-0.675-1.5-1.5-1.5zM18 4h-6v-1.975h6v1.975z\"></path>\n        </svg>\n      </SuperButton>\n    </li>\n  );\n}\n\nexport default Affair;\n","import React from 'react';\nimport Affair from './Affair';\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\nimport { AffairType, FilterType } from './HW2';\n\nimport classes from './Affairs.module.css';\n\ntype AffairsPropsType = {\n  // need to fix any\n  data: Array<AffairType>;\n  setFilter: (priority: FilterType) => void;\n  deleteAffairCallback: (_id: number) => void;\n};\n\nfunction Affairs(props: AffairsPropsType) {\n  const { affairs, affairsList, priorities, buttonsGroup } = classes;\n\n  const mappedAffairs = props.data.map((a: AffairType) => (\n    <Affair // should work\n      key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n      affair={a}\n      deleteAffairCallback={props.deleteAffairCallback}\n    />\n  ));\n\n  const setAll = () => {\n    props.setFilter('all');\n  }; // need to fix\n  const setHigh = () => {\n    props.setFilter('high');\n  };\n  const setMiddle = () => {\n    props.setFilter('middle');\n  };\n  const setLow = () => {\n    props.setFilter('low');\n  };\n\n  return (\n    <div className={affairs}>\n      <ul className={affairsList}>{mappedAffairs}</ul>\n\n      <div className={`${priorities} ${buttonsGroup}`}>\n        <SuperButton onClick={setAll}>All</SuperButton>\n        <SuperButton onClick={setHigh}>High</SuperButton>\n        <SuperButton onClick={setMiddle}>Middle</SuperButton>\n        <SuperButton onClick={setLow}>Low</SuperButton>\n      </div>\n    </div>\n  );\n}\n\nexport default Affairs;\n","import React, { useState } from 'react';\nimport Affairs from './Affairs';\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high'; // need to fix any\nexport type AffairType = {\n  _id: number;\n  name: string;\n  priority: AffairPriorityType\n}; // need to fix any\nexport type FilterType = 'all' | AffairPriorityType;\n\n// constants\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\n  { _id: 1, name: 'React', priority: 'high' },\n  { _id: 2, name: 'anime', priority: 'low' },\n  { _id: 3, name: 'games', priority: 'low' },\n  { _id: 4, name: 'work', priority: 'high' },\n  { _id: 5, name: 'html & css', priority: 'middle' },\n];\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => {\n  // need to fix any\n  if (filter === 'all') return affairs;\n  else return affairs.filter((a) => a.priority === filter) // need to fix\n};\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => {\n  // need to fix any\n  return affairs.filter((a) => a._id !== _id); // need to fix\n};\n\nfunction HW2() {\n  const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs); // need to fix any\n  const [filter, setFilter] = useState<FilterType>('all');\n\n  const filteredAffairs = filterAffairs(affairs, filter);\n  const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)); // need to fix any\n\n  return (\n    <div>\n      <hr/>\n      homeworks 2{/*should work (должно работать)*/}\n      <Affairs data={filteredAffairs} setFilter={setFilter} deleteAffairCallback={deleteAffairCallback}/>\n      <hr/>\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeAffairs/>*/}\n      <hr/>\n    </div>\n  );\n}\n\nexport default HW2;\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent, FC } from 'react';\nimport s from './SuperInputText.module.css';\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & {// и + ещё пропсы которых нет в стандартном инпуте\n  onChangeText?: (value: string) => void;\n  onEnter?: () => void;\n  error?: string;\n  spanClassName?: string;\n};\n\nconst SuperInputText: FC<SuperInputTextPropsType> = ({\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n  onChange,\n  onChangeText,\n  onKeyPress,\n  onEnter,\n  error,\n  className,\n  spanClassName,\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && // если есть пропс onChange\n      onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n    onChangeText && onChangeText(e.currentTarget.value);\n  };\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n    onKeyPress && onKeyPress(e);\n\n    e.key === 'Enter' && // если нажата кнопка Enter\n      onEnter && // и есть пропс onEnter\n      onEnter(); // то вызвать его\n  };\n\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`;\n  const finalInputClassName = `${s.superInput} ${error && s.errorInput}  ${className ? className : ''}`; // need to fix\n  // with (?:) and\n  // s.superInput\n\n  return (\n    <div className={s.superInputWrapper}>\n      {error && <span className={finalSpanClassName}>{error}</span>}\n      <input\n        type={'text'}\n        onChange={onChangeCallback}\n        onKeyPress={onKeyPressCallback}\n        className={finalInputClassName}\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n      />\n    </div>\n  );\n};\n\nexport default SuperInputText;\n","import React, { FC } from 'react';\nimport s from './Greeting.module.css';\nimport SuperInputText from '../h4/common/c1-SuperInputText/SuperInputText';\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton';\n\ntype GreetingPropsType = {\n  name: string; // need to fix any\n  setNameCallback: (value: string) => void; // need to fix any\n  addUser: () => void; // need to fix any\n  error: boolean; // need to fix any\n  totalUsers: number; // need to fix any\n};\n\n// презентационная компонента (для верстальщика)\nconst Greeting: FC<GreetingPropsType> = (\n  { name, setNameCallback, addUser, error, totalUsers }, // деструктуризация пропсов\n) => {\n\n\n  return (\n    <div className={s.bg}>\n      <div className={s.greetingBlock}>\n        <div className={s.greetingWrapper}>\n          <SuperInputText\n            value={name}\n            onChangeText={setNameCallback}\n            onEnter={addUser}\n            error={error ? 'Username should not be empty!' : ''}\n            placeholder=\"Write here...\"\n          />\n          <SuperButton red={error} onClick={addUser}>\n            Add\n          </SuperButton>\n        </div>\n        <span className={s.totalUsers}>{`Total users: ${totalUsers}`}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default Greeting;\n","import React, { FC, useState } from 'react';\nimport Greeting from './Greeting';\nimport { UserType } from './HW3';\n\ntype GreetingContainerPropsType = {\n  users: Array<UserType>; // need to fix any\n  addUserCallback: (name: string) => void; // need to fix any\n};\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: FC<GreetingContainerPropsType> = ({ users, addUserCallback }) => {\n  // деструктуризация пропсов\n  const [name, setName] = useState<string>(''); // need to fix any\n  const [error, setError] = useState<boolean>(false); // need to fix any\n\n  const setNameCallback = (name: string) => {\n    // need to fix any\n    setError(false);\n    setName(name); // need to fix\n  };\n  const addUser = () => {\n    if (name) {\n      addUserCallback(name);\n      alert(`Hello ${name}!`); // need to fix\n      setName('');\n    } else {\n      setError(true);\n    }\n  };\n\n  const totalUsers = users.length; // need to fix\n\n  return (\n    <Greeting name={name} setNameCallback={setNameCallback} addUser={addUser} error={error} totalUsers={totalUsers} />\n  );\n};\n\nexport default GreetingContainer;\n","import React, { useState } from 'react';\nimport {v1} from 'uuid';\nimport GreetingContainer from './GreetingContainer';\n\n// types\nexport type UserType = {\n  _id: string; // need to fix any\n  name: string; // need to fix any\n};\n\n// уровень работы с глобальными данными\nfunction HW3() {\n  const [users, setUsers] = useState<Array<UserType>>([]); // need to fix any\n\n  const addUserCallback = (name: string) => {\n    // need to fix any\n    const user = {\n      _id: v1(),\n      name,\n    };\n    setUsers([...users, user]); // need to fix\n  };\n\n  return (\n    <div>\n      <hr />\n      homeworks 3{/*should work (должно работать)*/}\n      <GreetingContainer users={users} addUserCallback={addUserCallback} />\n      <hr />\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeGreeting/>*/}\n      <hr />\n    </div>\n  );\n}\n\nexport default HW3;\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, FC } from 'react';\nimport s from './SuperCheckbox.module.css';\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n  onChangeChecked?: (checked: boolean) => void;\n  spanClassName?: string;\n};\n\nconst SuperCheckbox: FC<SuperCheckboxPropsType> = ({\n  type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n  onChange,\n  onChangeChecked,\n  className,\n  spanClassName,\n  children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n  ...restProps // все остальные пропсы попадут в объект restProps\n}) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    // сделайте так чтоб работал onChange и onChangeChecked\n    onChange && onChange(e);\n    onChangeChecked && onChangeChecked(e.currentTarget.checked);\n  };\n\n  const finalInputClassName = `${s.checkbox} ${className ? className : ''}`;\n\n  return (\n    <label className={s.checkboxWrapper}>\n      <input\n        type={'checkbox'}\n        onChange={onChangeCallback}\n        className={finalInputClassName}\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n      />\n      {children && <span className={s.spanClassName}>{children}</span>}\n    </label> // благодаря label нажатие на спан передастся в инпут\n  );\n};\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, useState} from \"react\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\nimport s from \"./HW4.module.css\";\n\nfunction HW4() {\n    const [text, setText] = useState<string>(\"\");\n    const error = text ? \"\" : \"error\";\n    const showAlert = () => {\n        if (error) {\n            alert(\"введите текст...\");\n        } else {\n            alert(text); // если нет ошибки показать текст\n            setText('');\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false);\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                {/*should work (должно работать)*/}\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    // className={s.blue} // проверьте, рабоет ли смешивание классовisInvalid\n                />\n\n                {/*should work (должно работать)*/}\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                {/*should work (должно работать)*/}\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW4;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction Junior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default Junior;\n","import React from \"react\";\nimport HW1 from \"../../h1/HW1\";\nimport HW2 from \"../../h2/HW2\";\nimport HW3 from \"../../h3/HW3\";\nimport HW4 from \"../../h4/HW4\";\n\nfunction JuniorPlus() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW6/>*/}\n\n        </div>\n    );\n}\n\nexport default JuniorPlus;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Error404 from './pages/Error404';\nimport PreJunior from './pages/PreJunior';\nimport Junior from './pages/Junior';\nimport JuniorPlus from './pages/JuniorPlus';\n\nexport const PATH = {\n  PRE_JUNIOR: '/pre-junior',\n  JUNIOR: '/junior',\n  JUNIOR_PLUS: '/junior-plus',\n  // add paths\n};\n\nfunction Routes() {\n  return (\n    <div>\n      {/*Switch выбирает первый подходящий роут*/}\n      <Switch>\n        {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n        {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n        <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR} />} />\n        <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior />} />\n        // add routes\n        <Route path={PATH.JUNIOR} render={() => <Junior />} />\n        <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus />} />\n        {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n        <Route render={() => <Error404 />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { HashRouter } from 'react-router-dom';\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from 'react';\nimport s from './App.module.css';\nimport HW5 from '../../../p2-homeworks/h5/HW5';\n\nfunction App() {\n  return (\n    <div className={s.App}>\n      <div>react homeworks:</div>\n      {/*<HW1 />*/}\n      {/*<HW2/>*/}\n      {/*<HW3/>*/}\n      {/*<HW4/>*/}\n      <HW5/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}